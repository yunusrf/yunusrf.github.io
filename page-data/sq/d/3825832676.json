{"data":{"projects":{"edges":[{"node":{"frontmatter":{"title":"Automation of Graduating Student Information Process","tech":["Python","Django 5.x","SQLAlchemy","sqlalchemy-connector","Django REST Framework","django-rest-client","django-recaptcha","django-crispy-forms","Pandas","openpyxl","xlsxwriter","Matplotlib","Celery","Django-Q","Pytest","HTML","CSS","Bootstrap","JavaScript","jQuery","PostgreSQL 15.x","Redis","Tableau","Banner API","SSO","RESTful API","CI/CD","Git","Agile"],"github":"","external":""},"html":"<p>Architected and developed an automated web application to streamline the Graduating Student Information process at KFUPM, supporting the transition from Ellucian Banner-8 to Banner-9. The system enables students to submit forms, upload documents, edit submissions until deadlines, and generate print previews. Custom admin modules and periodic reports were implemented to monitor student progress, with integrated notifications for both students and administrators to ensure seamless communication.</p>\n<p><strong>Key Technical Achievements:</strong></p>\n<ul>\n<li><strong>Database Design &#x26; Development:</strong> Developed a robust schema using Django ORM for managing graduating student information and optimized PostgreSQL queries for performance.</li>\n<li><strong>API Integration:</strong> Integrated Banner APIs for secure student data retrieval and updates via Django REST Framework, including middleware for external system communication.</li>\n<li><strong>Web Application Development:</strong> Built dynamic, user-friendly forms and interfaces using Django MTV, Bootstrap, and jQuery, with real-time validation and secure data submission.</li>\n<li><strong>Notification System:</strong> Automated email and in-app notifications for form submissions and updates using Django’s Email API and Celery.</li>\n<li><strong>Custom Admin Features:</strong> Enhanced Django admin for data preview, printing, and advanced search/filtering of student records.</li>\n<li><strong>Reporting &#x26; Visualization:</strong> Developed dashboards and automated reports using Tableau, Matplotlib, openpyxl, and xlsxwriter.</li>\n<li><strong>Documentation:</strong> Produced comprehensive design documents, technical specifications, and user guides for the application and reporting modules.</li>\n</ul>\n<p><strong>Role:</strong> Technical Architect / Senior Developer</p>\n<p><strong>Software/Tools:</strong> Python, Django 5.x, SQLAlchemy, Django REST Framework, django-recaptcha, django-crispy-forms, Pandas, openpyxl, xlsxwriter, Matplotlib, Celery, Django-Q, Pytest, Git, PyCharm, VSCode, PostgreSQL 15.x, Redis, Tableau, Banner API, SSO, RESTful API, CI/CD, Agile\n<strong>Operating Systems:</strong> Windows 11 Pro, Ubuntu 24.04.1 LTS</p>"}},{"node":{"frontmatter":{"title":"Faculty Portal Enhancement & Student Grade Reports System","tech":["Python","Django 5.x","Django REST Framework","SQLAlchemy","django_rest_client","django-recaptcha","django-crispy-forms","Pandas","openpyxl","xlsxwriter","Matplotlib","Celery","HTML","CSS","Bootstrap","JavaScript","jQuery","PostgreSQL 15.x","Redis","Tableau"],"github":"","external":""},"html":"<p>Led the migration and enhancement of faculty services at KFUPM by architecting and developing a Faculty Portal module to fetch graded class rosters, identify students with D/DN grades, and generate periodic academic standing reports. The project addressed the end-of-life of Ellucian Banner-8 SSB by integrating legacy Banner APIs into a modern Python/Django platform, delivering secure web forms, advanced pagination, and analytical dashboards.</p>\n<p><strong>Key Technical Achievements:</strong></p>\n<ul>\n<li><strong>Database Modeling:</strong> Designed and implemented robust Django ORM models for managing student academic data in PostgreSQL 15.x.</li>\n<li><strong>API Integration:</strong> Integrated Ellucian Banner APIs for real-time faculty and class roster data retrieval using Django REST Framework.</li>\n<li><strong>Service Migration:</strong> Developed new backend services and ensured seamless integration with existing Python/Django codebase for smooth migration from Banner SSB.</li>\n<li><strong>User Interface:</strong> Built responsive web interfaces with Django MVT, HTML, Bootstrap, and jQuery, featuring pagination and data filtering.</li>\n<li><strong>Admin Customization:</strong> Enhanced Django Admin for faculty to view and print student rosters with D/DN grades.</li>\n<li><strong>Reporting &#x26; Analytics:</strong> Designed and implemented key reports and dashboards using Tableau for academic analysis.</li>\n<li><strong>Documentation:</strong> Produced technical design documents, flow diagrams, and detailed specifications for application and reporting modules.</li>\n<li><strong>DevOps:</strong> Applied best practices in version control (Git) and CI/CD strategies.</li>\n</ul>"}},{"node":{"frontmatter":{"title":"High-Impact Academic Publication Forecasting with Machine Learning","tech":["Python","MySQL","Jupyter Notebook","Pyodbc","NumPy","Pandas","xlsxwriter","text2sdg","Matplotlib","Conda","VSCode","R","Gradio"],"github":"","external":""},"html":"<p>Developed a machine learning system to forecast high-impact academic publications using advanced bibliometric analysis, feature engineering, and ensemble modeling. Automated data extraction, processing, and model validation workflows for robust, scalable research analytics.</p>\n<p><strong>Key Technical Achievements:</strong></p>\n<ul>\n<li><strong>Data Engineering &#x26; Automation:</strong> Automated extraction and processing of bibliometric data (27+ features) from Web of Science using Python and R</li>\n<li><strong>Feature Engineering &#x26; ML Modeling:</strong> Built and tuned supervised learning models (Logistic Regression, Decision Trees, KNN, SVM, Random Forest, MLP, Naïve Bayes, Model Fusion, LSTM) for high-impact paper prediction</li>\n<li><strong>Model Validation &#x26; App Development:</strong> Developed Gradio app for model verification and interactive validation</li>\n<li><strong>Visualization &#x26; Reporting:</strong> Created insightful data visualizations in Jupyter Notebooks and automated reporting with xlsxwriter</li>\n<li><strong>End-to-End Workflow:</strong> Delivered a reproducible, scalable pipeline from data collection to model deployment and reporting</li>\n</ul>"}},{"node":{"frontmatter":{"title":"QS Rankings Analytics & Dashboard with Scopus Data","tech":["Python","Selenium WebDriver","MySQL","Jupyter Notebook","Pyodbc","NumPy","Pandas","xlsxwriter","Matplotlib","Seaborn","Conda","Bitbucket Git","VSCode"],"github":"","external":""},"html":"<p>Developed an automated analytics platform for QS World University Rankings using Scopus bibliographic data, enabling data-driven policy formulation and benchmarking for academic productivity and quality.</p>\n<p><strong>Key Technical Achievements:</strong></p>\n<ul>\n<li><strong>Automated Data Integration:</strong> Engineered Selenium-based modules to extract and update multi-year publication data from Scopus</li>\n<li><strong>Data Engineering &#x26; Storage:</strong> Built robust pipelines for data preprocessing, storage, and retrieval in MySQL</li>\n<li><strong>Statistical &#x26; Diagnostic Analytics:</strong> Implemented QSS methodology for ranking calculations, descriptive and diagnostic analytics, and root cause analysis</li>\n<li><strong>Dashboard &#x26; Reporting:</strong> Generated summary dashboards, Excel reports, and interactive charts using Pandas, Matplotlib, and Seaborn</li>\n<li><strong>End-to-End Workflow:</strong> Delivered a reproducible analytics solution from data acquisition to reporting and visualization</li>\n</ul>"}},{"node":{"frontmatter":{"title":"Chlorophyll-a Forecasting in the Arabian Gulf with ML & Remote Sensing","tech":["SeaDAS","Python","Jupyter Notebook","Salem","Scikit-Learn","Keras","NumPy","SciPy","Pandas","Matplotlib","StatsModels","sktime","Conda","Bitbucket Git","VSCode"],"github":"","external":""},"html":"<p>Developed a machine learning pipeline for forecasting Chlorophyll-a (Chl-a) concentrations in the Saudi Arabian Gulf using ten years of MODIS satellite data and advanced time series modeling. Automated remote sensing data acquisition, preprocessing, and model training for environmental analytics.</p>\n<p><strong>Key Technical Achievements:</strong></p>\n<ul>\n<li><strong>Remote Sensing Data Automation:</strong> Engineered automated modules to download and preprocess MODIS satellite data (Chl-a and 9+ parameters) from NASA OceanColor</li>\n<li><strong>ML &#x26; DL Modeling:</strong> Built and tuned statistical, machine learning, and deep learning models (SVR, Bagging, RF, XGBoost, RNN, LSTM, k-NN, ARIMA, Holt-Winter) for univariate and multivariate forecasting</li>\n<li><strong>Geospatial Data Processing:</strong> Leveraged Python geoscientific libraries (Salem) for spatial data handling and visualization</li>\n<li><strong>End-to-End Workflow:</strong> Delivered a reproducible pipeline from data acquisition to model deployment and reporting</li>\n<li><strong>Technical Communication:</strong> Authored technical reports and academic manuscripts documenting methodologies and findings</li>\n</ul>"}},{"node":{"frontmatter":{"title":"Enterprise ICT Indicators Data Collection & Analytics Platform","tech":["ASP.NET MVC 5","C# .NET","Entity Framework","MS SQL Server 2017","Google Maps API","Bootstrap 4.0","JavaScript","jQuery","HTML5","CSS3","Qlik Sense","SQL Server Management Studio","REST APIs"],"github":"","external":"https://medium.com/stories-from-upstatement/integrating-algolia-search-with-wordpress-multisite-e2dea3ed449c"},"html":"<p>Architected and developed a comprehensive full-stack web application for Saudi Arabia's Communications and Information Technology Commission (CITC) to collect, monitor, and analyze ICT indicators from telecommunications operators. Built enterprise-grade data collection system with advanced analytics integration and multi-language support.</p>\n<p><strong>Key Technical Achievements:</strong></p>\n<ul>\n<li><strong>Full-Stack Development:</strong> Designed end-to-end ASP.NET MVC 5 application with responsive Bootstrap UI supporting Arabic/English localization</li>\n<li><strong>API Integration:</strong> Implemented Google Maps API integration and custom REST APIs for data exchange with external systems</li>\n<li><strong>Database Architecture:</strong> Engineered robust MS SQL Server database with Entity Framework ORM for complex indicator data modeling</li>\n<li><strong>Business Intelligence:</strong> Integrated Qlik Sense analytics platform for advanced reporting and data visualization</li>\n<li><strong>Enterprise Features:</strong> Built sophisticated user management, role-based access control, and approval workflow systems</li>\n<li><strong>Data Export &#x26; Reporting:</strong> Developed flexible data export capabilities with custom filtering and real-time report generation</li>\n</ul>"}},{"node":{"frontmatter":{"title":"Wind Speed Forecasting with Machine Learning & Deep Learning","tech":["Python","Jupyter Notebook","Scikit-Learn","Keras","NumPy","SciPy","Pandas","Matplotlib","StatsModels","sktime","Conda","Bitbucket Git","VSCode"],"github":"","external":""},"html":"<p>Developed a robust machine learning and deep learning pipeline for wind speed forecasting at multiple Saudi Arabian sites, supporting renewable energy system planning and optimization.</p>\n<p><strong>Key Technical Achievements:</strong></p>\n<ul>\n<li><strong>Data Engineering &#x26; Automation:</strong> Automated data cleaning, imputation, and dataset creation for time series forecasting (CSV/ARFF formats)</li>\n<li><strong>ML &#x26; DL Modeling:</strong> Implemented and tuned statistical, machine learning, and deep learning models (k-NN, RF, SVR, ARIMA, Holt-Winter, CNN, MLP) for univariate and multivariate forecasting</li>\n<li><strong>Model Optimization:</strong> Applied batch learning and hyperparameter tuning (Grid Search) for optimal prediction accuracy</li>\n<li><strong>Visualization &#x26; Reporting:</strong> Created insightful visualizations in Jupyter Notebooks and authored technical reports/manuscripts</li>\n<li><strong>End-to-End Workflow:</strong> Delivered a reproducible, scalable solution from data analysis to model deployment</li>\n</ul>"}},{"node":{"frontmatter":{"title":"RF Radiation Measurements Web Application & Automated Reporting","tech":["ASP.NET MVC","C# .NET","MS SQL Server 2010","Google Maps API","JavaScript","jQuery","HTML5","CSS3","XML","SQL Server Management Studio","Open XML SDK","Microsoft Word Object Model","Visual SVN"],"github":"","external":""},"html":"<p>Led the design and development of a full-stack .NET web application for managing and reporting RF radiation measurements at telecom base stations. Delivered seamless device data integration, automated report generation, and robust database architecture for enterprise-scale field data collection and compliance reporting.</p>\n<p><strong>Key Technical Achievements:</strong></p>\n<ul>\n<li><strong>Full-Stack Development:</strong> Built end-to-end web application using C# .NET, JavaScript, jQuery, and Google Maps API for interactive data entry and visualization</li>\n<li><strong>Device &#x26; API Integration:</strong> Engineered modules to ingest and validate data from RF measurement devices (Narda NBM-550, SRM-3000) and integrated Google Maps for geolocation</li>\n<li><strong>Automated Reporting:</strong> Developed Microsoft Word add-in and reporting tools using Office Open XML SDK for custom Word/PDF report generation</li>\n<li><strong>Database Engineering:</strong> Designed MS SQL Server schema, stored procedures, triggers, and backup automation scripts for secure, reliable data management</li>\n<li><strong>Enterprise Features:</strong> Implemented configuration management (Visual SVN), defect resolution, and periodic site allocation workflows</li>\n<li><strong>Documentation &#x26; Maintenance:</strong> Authored technical documentation and maintained application for ongoing enhancements</li>\n</ul>"}},{"node":{"frontmatter":{"title":"Layfootak: Mobile Wallet & Merchant Offers Platform (iOS)","tech":["Swift","Objective-C","iOS SDK","XCode","Facebook iOS SDK","Twitter iOS SDK","QR Code","NFC","REST APIs","Apple Maps","Localization (English/Arabic)"],"github":"","external":"https://layfootak.com/"},"html":"<p>Architected and developed an interactive mobile wallet application for iOS, enabling merchants to promote offers and users to collect, redeem, and manage digital coupons with advanced location, QR/NFC, and social login features.</p>\n<p><strong>Key Technical Achievements:</strong></p>\n<ul>\n<li><strong>Full-Stack iOS Development:</strong> Built end-to-end iOS app with Swift/Objective-C, custom UI, and multi-language support (English/Arabic)</li>\n<li><strong>API Integration:</strong> Integrated REST APIs for dynamic offers, city/category data, and real-time coupon management</li>\n<li><strong>Social &#x26; Secure Login:</strong> Implemented custom email, Facebook, and Twitter authentication</li>\n<li><strong>Location &#x26; Map Features:</strong> Developed map-based offer discovery, city selection, and merchant pinning using Apple Maps</li>\n<li><strong>QR/NFC/Barcode Redemption:</strong> Enabled secure coupon redemption via QR code, barcode, and NFC integration with POS systems</li>\n<li><strong>App Store Delivery:</strong> Led localization, documentation, and successful App Store publishing</li>\n</ul>"}},{"node":{"frontmatter":{"title":"ICT Market Study & Enterprise Survey Platform Integration","tech":["Apache Web Server","Apache Tomcat","MySQL","WorldAPP KeySurvey","C# .NET","Visual Studio","HTML5","CSS3","iOS","Android","REST APIs"],"github":"","external":""},"html":"<p>Led the technical architecture and development for a nationwide ICT market study, integrating enterprise survey platforms and custom modules for large-scale data collection and analysis across Saudi Arabia's ICT sector.</p>\n<p><strong>Key Technical Achievements:</strong></p>\n<ul>\n<li><strong>Survey Platform Integration:</strong> Evaluated, customized, and integrated WorldAPP KeySurvey for multi-year, multi-device (iOS/Android) data collection, supporting Arabic RTL and advanced logic</li>\n<li><strong>API &#x26; Custom Module Development:</strong> Developed C# .NET modules and REST API integrations for participant management, workflow, and permissions</li>\n<li><strong>Custom UI &#x26; Mobile Support:</strong> Designed mobile-friendly, interactive survey UIs with HTML5/CSS3 and tested on iOS/Android</li>\n<li><strong>Enterprise Data Management:</strong> Administered survey data suite, contact manager, and coordinated technical communications for platform support</li>\n<li><strong>Full-Stack Delivery:</strong> Delivered end-to-end solution from survey authoring to data collection, management, and reporting</li>\n</ul>"}},{"node":{"frontmatter":{"title":"Qalam (Sigil) EPUB Editor & eAkash Reader Suite","tech":["C++","Qt","Crypto++","libzip","JNI","Android","QtWebEngine","CMake","Visual Studio","XCode","Android NDK","Eclipse","Android ADT","Android Platform-tools","Git"],"github":"","external":""},"html":"<p>Architected and enhanced a cross-platform EPUB authoring and reading suite, extending the open-source Sigil tool (Qalam) with advanced encryption, decryption, and seamless Android integration for secure digital publishing.</p>\n<p><strong>Key Technical Achievements:</strong></p>\n<ul>\n<li><strong>Full-Stack Cross-Platform Development:</strong> Enhanced Sigil (Qalam) with custom cryptographic features using Crypto++ and Qt for Windows, Mac, and Linux</li>\n<li><strong>API &#x26; Native Integration:</strong> Built JNI/C++ wrappers for Crypto++ and libzip, enabling secure EPUB handling and direct content access</li>\n<li><strong>Android Reader Integration:</strong> Integrated and tested decryption and reading modules for eAkash Android app</li>\n<li><strong>UI/UX &#x26; Feature Enhancements:</strong> Added Qt UI controls, improved usability, and ensured robust encryption/decryption workflows</li>\n<li><strong>DevOps &#x26; Documentation:</strong> Managed configuration with Git, authored technical specs, and maintained cross-platform documentation</li>\n</ul>"}},{"node":{"frontmatter":{"title":"Research Tracking Application Suite & Automated Data Integration","tech":["C# .NET","Visual Studio","VC++","MFC","MySQL","MS Access","Selenium HQ","Dundas Chart for .NET","Git"],"github":"","external":""},"html":"<p>Designed and developed a suite of applications for tracking and analyzing research activities across Saudi universities, featuring automated data integration, advanced charting, and robust database management.</p>\n<p><strong>Key Technical Achievements:</strong></p>\n<ul>\n<li><strong>Full-Stack Desktop Development:</strong> Built tab-based research tracking tools using C# .NET, VC++, and MFC with interactive charting (Dundas Chart)</li>\n<li><strong>Automated Data Integration:</strong> Engineered Selenium HQ automation to extract and update research data from Scopus, streamlining data workflows</li>\n<li><strong>Database Management:</strong> Automated MySQL database creation, updates, and integration with MS Access for flexible data storage</li>\n<li><strong>Analytics &#x26; Visualization:</strong> Implemented advanced statistics and comparison dashboards for research productivity analysis</li>\n<li><strong>Enterprise Features:</strong> Maintained tools with Git-based configuration management and regular data refresh cycles</li>\n</ul>"}},{"node":{"frontmatter":{"title":"eAkash EPUB eBook Reader for Android","tech":["Android","C++","JNI","Crypto++","libzip","AppSkyEpub SDK","Eclipse","Android NDK","Android ADT","Android Platform-tools"],"github":"","external":""},"html":"<p>Developed a secure EPUB eBook reader for Android, integrating native C++ libraries for decryption and efficient content access, with JNI interfaces and proprietary SDKs for seamless user experience.</p>\n<p><strong>Key Technical Achievements:</strong></p>\n<ul>\n<li><strong>Native Library Integration:</strong> Integrated Crypto++ for decryption and libzip for direct EPUB reading via JNI wrappers</li>\n<li><strong>Secure Content Handling:</strong> Enabled reading and decrypting ePub files generated by proprietary editors without extraction</li>\n<li><strong>SDK &#x26; API Integration:</strong> Leveraged AppSkyEpub SDK and custom decryption modules for robust EPUB support</li>\n<li><strong>Testing &#x26; Validation:</strong> Implemented and tested content extraction and decryption workflows for Android</li>\n<li><strong>Cross-Platform Development:</strong> Delivered solution using Android NDK/ADT, Eclipse, and C++ for Mac OS X/Linux development environments</li>\n</ul>"}},{"node":{"frontmatter":{"title":"Quran Publications Content Viewer (iOS)","tech":["Objective-C","iOS SDK","XCode","Image Viewer","Bookmarking","TableView UI","Localization"],"github":"","external":"http://publications-img.qurancomplex.gov.sa/?page_id=190"},"html":"<p>Developed an iOS application for browsing and viewing digital publications of the King Fahd Quran Printing Complex, featuring high-resolution image viewing, bookmarking, and multi-category navigation.</p>\n<p><strong>Key Technical Achievements:</strong></p>\n<ul>\n<li><strong>iOS App Development:</strong> Designed and implemented core features in Objective-C with XCode and iOS SDK</li>\n<li><strong>Image Viewer &#x26; Zoom:</strong> Built high-clarity image viewer with zoom and navigation for digital Quran publications</li>\n<li><strong>Bookmark &#x26; Index:</strong> Developed bookmarking, Sura index, and go-to-page features for enhanced user experience</li>\n<li><strong>Category Navigation:</strong> Enabled browsing by Quran, Books, and Translations with intuitive UI</li>\n<li><strong>Localization &#x26; Publishing:</strong> Supported multi-language content and prepared technical documentation</li>\n</ul>"}},{"node":{"frontmatter":{"title":"Prayer Times Application (Symbian S60)","tech":["Symbian C++","Series 60","S60 Open C/C++","Carbide","ARM","UI/UX","Alarm Engine","Qibla Direction","Reciter Engine","Profile Engine","City Database","SVN"],"github":"","external":"http://symbian.qurancomplex.gov.sa/new/download"},"html":"<p>Developed a native Symbian S60 application for accurate prayer times, Qibla direction, alarms, and Azaan recitation, featuring robust UI, profile management, and configuration automation.</p>\n<p><strong>Key Technical Achievements:</strong></p>\n<ul>\n<li><strong>Native Symbian Development:</strong> Designed and implemented city database, profile, Qibla, alarm, and reciter engines in Symbian C++</li>\n<li><strong>UI/UX &#x26; Feature Set:</strong> Built intuitive UI for prayer times, Qibla direction, alarms, and recitation</li>\n<li><strong>Automation &#x26; Configuration:</strong> Automated technical documentation and managed configuration with SVN</li>\n<li><strong>Localization &#x26; Publishing:</strong> Supported multi-language content and ensured robust deployment</li>\n</ul>"}},{"node":{"frontmatter":{"title":"Quran Viewer Application (Symbian S60)","tech":["Symbian C++","Series 60","Carbide","ARM","XML Parsing","UI/UX","SIS Packaging","SVN"],"github":"","external":"http://symbian.qurancomplex.gov.sa/new/download"},"html":"<p>Developed a feature-rich Quran Viewer application for Symbian S60 phones, supporting Tafseer, memorization, recitation, search, and multi-book navigation with robust UI and automation features.</p>\n<p><strong>Key Technical Achievements:</strong></p>\n<ul>\n<li><strong>Native Symbian Development:</strong> Designed and implemented core modules in Symbian C++ for ARM targets</li>\n<li><strong>Parser &#x26; Engine Design:</strong> Built XML parsers for Tafseer, translation, and book modules</li>\n<li><strong>UI/UX &#x26; Feature Set:</strong> Developed UI for Tafseer, bookmarks, memorization, reminders, and search</li>\n<li><strong>Automation &#x26; Packaging:</strong> Automated SIS file generation for audio, books, and modules</li>\n<li><strong>Collaboration &#x26; Versioning:</strong> Managed technical docs, client interaction, and configuration with SVN</li>\n</ul>"}},{"node":{"frontmatter":{"title":"Symbian Open Platform Tools: Debugging, Profiling & IDE Integration","tech":["Symbian C++","Series 60 5.0","Carbide IDE","Profiler","TRK","Flashing Tools","Debugging Tools","Static Analysis","Memory Core Dump","Eclipse Plugin Development","Scrum"],"github":"","external":""},"html":"<p>Led the development, enhancement, and global support of Symbian platform tools, including debugging, profiling, static analysis, and IDE integration for Sony Ericsson and the Symbian developer community.</p>\n<p><strong>Key Technical Achievements:</strong></p>\n<ul>\n<li><strong>Toolchain Enhancement:</strong> Enhanced proprietary and third-party tools for debugging, tracing, profiling, and memory analysis</li>\n<li><strong>IDE &#x26; Plugin Development:</strong> Developed Eclipse-based plugins for Carbide IDE and integrated new tools for developer workflows</li>\n<li><strong>Developer Support &#x26; Training:</strong> Provided global support, created education materials, and delivered training for Symbian tools</li>\n<li><strong>Process &#x26; Collaboration:</strong> Coordinated tool maintenance, evaluated new technologies, and led a team with Scrum-based task management</li>\n<li><strong>Quality &#x26; Integration:</strong> Tested, documented, and managed tool releases across multiple development sites</li>\n</ul>"}},{"node":{"frontmatter":{"title":"MEDION Center Application Suite: Touch, Speech & Media Platform","tech":["C","C++","C#","WPF","Visual Studio 2008","Silverlight 2.0","Nuance SR/TTS","Charamel Avatar Player","Touch/Handwriting SDKs"],"github":"","external":""},"html":"<p>Architected and led the development of a multi-application suite for touch and multi-touch enabled Windows devices, integrating advanced speech recognition, TTS, and avatar technologies for an interactive user experience.</p>\n<p><strong>Key Technical Achievements:</strong></p>\n<ul>\n<li><strong>Full-Stack Application Development:</strong> Designed and delivered container and feature applications (Notes, Media Player, Picture Viewer) with C#, WPF, and Silverlight</li>\n<li><strong>API &#x26; SDK Integration:</strong> Engineered wrapper modules for Charamel Avatar Player, Nuance SR/TTS, and Microsoft Media/Imaging frameworks</li>\n<li><strong>Touch &#x26; Handwriting Enablement:</strong> Integrated touch and handwriting recognition SDKs for natural user interaction</li>\n<li><strong>Technical Leadership:</strong> Led requirements analysis, technical design, and team coordination for on-time delivery</li>\n<li><strong>Enterprise Features:</strong> Provided technical support, design reviews, and customer-facing technical discussions</li>\n</ul>"}},{"node":{"frontmatter":{"title":"Bluetooth Application Suite & HMI for Personal Navigation Device","tech":["C++","Win32 APIs","Embedded VC++","EB Guide Studio","Cybercomm BT SDK","Speech Recognition (Nuance Vocon 3200)","Windows CE 5.0","Windows Mobile"],"github":"","external":""},"html":"<p>Led the architecture and development of a Bluetooth application suite and HMI for a Personal Navigation Device (PND), enabling advanced connectivity, voice recognition, and adaptable user interfaces for embedded automotive systems.</p>\n<p><strong>Key Technical Achievements:</strong></p>\n<ul>\n<li><strong>Full-Stack Embedded Development:</strong> Built Bluetooth suite supporting multiple profiles (audio, messaging, rear-view camera, etc.) on Windows CE/Mobile</li>\n<li><strong>API &#x26; SDK Integration:</strong> Designed wrapper classes and integrated Cybercomm BT SDK and Nuance Vocon 3200 for speech recognition</li>\n<li><strong>HMI &#x26; UI Engineering:</strong> Developed and mentored HMI screens using EB Guide Studio and Win32 programming for multi-resolution support</li>\n<li><strong>Team Leadership &#x26; Delivery:</strong> Led a team of engineers, managed technical discussions, and ensured on-time delivery</li>\n<li><strong>Validation &#x26; Testing:</strong> Designed validation apps and handled technical queries for robust, production-ready solutions</li>\n</ul>"}},{"node":{"frontmatter":{"title":"Mobile Phone Scanner Application (Symbian S60)","tech":["Symbian C++","Series 60","Carbide","ARM","Camera API","UI/UX"],"github":"","external":""},"html":"<p>Developed a Symbian S60 application to transform mobile phones into document scanners using the device camera, automating telecom customer application processing with a custom UI and camera integration.</p>\n<p><strong>Key Technical Achievements:</strong></p>\n<ul>\n<li><strong>Native Symbian Development:</strong> Designed and implemented UI and camera modules using S60 platform and Symbian C++</li>\n<li><strong>Camera &#x26; UI Integration:</strong> Built camera container, settings, and user interface for seamless scanning experience</li>\n<li><strong>Defect Resolution &#x26; Team Support:</strong> Led defect fixing and provided technical support to the development team</li>\n<li><strong>Process Automation:</strong> Enabled automation of telecom customer application processing via mobile scanning</li>\n</ul>"}},{"node":{"frontmatter":{"title":"Illegal Packet Analyzer: Network Detection & Content Filtering Platform","tech":["Linux","C++","Symbian C++","Series 60 SDK","Zeek (Bro-IDS)","Network Protocol Analyzer","SOAP APIs","PostgreSQL","Socket Programming","Enterprise Architect"],"github":"","external":"https://zeek.org/"},"html":"<p>Led the architecture and development of a Linux-based network appliance for IP traffic detection and content filtering, leveraging Zeek (Bro-IDS) and custom Symbian modules for mobile network protocol analysis.</p>\n<p><strong>Key Technical Achievements:</strong></p>\n<ul>\n<li><strong>Full-Stack Network Platform:</strong> Designed and implemented detector engines for TCP/IP and 3G mobile protocols using Symbian OS and Linux</li>\n<li><strong>API &#x26; Database Integration:</strong> Developed SOAP APIs for rule/configuration management and C++ wrappers for PostgreSQL</li>\n<li><strong>Open Source &#x26; High Performance:</strong> Customized Zeek (Bro-IDS) to support millions of rules for high-availability detection</li>\n<li><strong>Team Leadership &#x26; Delivery:</strong> Led a 14-member team, managed requirements, technical queries, and cross-team/customer collaboration</li>\n<li><strong>Documentation &#x26; Estimation:</strong> Authored developer guides, contributed to technical documentation, and managed project estimation</li>\n</ul>"}},{"node":{"frontmatter":{"title":"SoundDevice Flush Buffers API for Symbian Multimedia","tech":["C++","Symbian OS","Code Warrior","Visual C++","ARM","Enterprise Architect","Unit Testing","Quality Tools (Lint, Leavescan)"],"github":"","external":""},"html":"<p>Designed and implemented the FlushBuffers API for the DevSound interface in Symbian's Multimedia Device Framework (MDF), enabling robust buffer management and improved audio playback reliability.</p>\n<p><strong>Key Technical Achievements:</strong></p>\n<ul>\n<li><strong>API &#x26; Framework Engineering:</strong> Analyzed, designed, and implemented the FlushBuffers API for DevSound, ensuring binary compatibility</li>\n<li><strong>Buffer Management:</strong> Enhanced audio controller and MDF to support pre-play buffer clearing for reliable playback</li>\n<li><strong>Testing &#x26; Quality:</strong> Authored unit test specs, implemented positive/negative test cases, and used Lint/Leavescan for quality assurance</li>\n<li><strong>Documentation &#x26; Collaboration:</strong> Produced detailed design docs, coordinated with integration teams, and managed configuration branches</li>\n</ul>"}},{"node":{"frontmatter":{"title":"New Audio Driver API for Symbian Multimedia Framework","tech":["C++","Symbian OS","Code Warrior","Visual C++","ARM","Enterprise Architect","RChunk","Unit Testing","Configuration Management"],"github":"","external":""},"html":"<p>Designed and implemented a new Audio Driver API for the Symbian Multimedia Framework (MMF), enabling enhanced hardware features, improved buffer transfer, and future-proofed multimedia subsystem architecture.</p>\n<p><strong>Key Technical Achievements:</strong></p>\n<ul>\n<li><strong>API &#x26; Framework Engineering:</strong> Analyzed, designed, and implemented new Audio Driver API and user-side interface classes for MMF</li>\n<li><strong>Performance Optimization:</strong> Leveraged RChunk (kernel-level object) for high-speed buffer transfer between hardware and MMF</li>\n<li><strong>Design &#x26; Documentation:</strong> Authored detailed design docs, use-cases, UML diagrams, and sample code for API integration</li>\n<li><strong>Testing &#x26; Integration:</strong> Developed unit tests, coordinated integration, and managed configuration branches</li>\n<li><strong>Collaboration &#x26; Delivery:</strong> Worked closely with integration teams and maintained technical documentation for ongoing enhancements</li>\n</ul>"}},{"node":{"frontmatter":{"title":"GNU-Make Based Build System for Linux-Hosted Symbian OS","tech":["C++","GNU Make","Linux","Windows","Enterprise Architect","Code Warrior","Perforce","Build Automation","Configuration Management"],"github":"","external":""},"html":"<p>Led the architecture and implementation of a GNU-Make based build system to enable Linux-hosted building of Symbian OS components, supporting cross-platform development, automation, and scalable deployment.</p>\n<p><strong>Key Technical Achievements:</strong></p>\n<ul>\n<li><strong>Build System Engineering:</strong> Designed and ported build tools for Linux and Windows compatibility, enabling flexible hardware/toolchain configuration</li>\n<li><strong>Cross-Platform Automation:</strong> Automated build and deployment processes for Symbian OS and test code</li>\n<li><strong>Technical Leadership:</strong> Led requirements, estimation, and technical communication with global teams</li>\n<li><strong>Documentation &#x26; Support:</strong> Authored technical documentation, how-to guides, and managed configuration branches in Perforce</li>\n</ul>"}},{"node":{"frontmatter":{"title":"ATD Multimedia Quality Plan for Symbian OS","tech":["Symbian C++","Code Warrior","Perforce","Lotus Notes","TeamTrack","ARM","Multimedia Framework (MMF)","Device Framework (MDF)","Image Conversion Library (ICL)"],"github":"","external":""},"html":"<p>Drove quality and performance improvements across the Symbian OS multimedia subsystem, optimizing frameworks, codecs, and memory management for enhanced reliability and efficiency.</p>\n<p><strong>Key Technical Achievements:</strong></p>\n<ul>\n<li><strong>Subsystem Optimization:</strong> Analyzed and resolved programming/architectural issues in MMF, MDF, and ICL</li>\n<li><strong>Audio &#x26; Memory Enhancements:</strong> Fixed audio system issues and memory leaks in DevSound custom interface</li>\n<li><strong>Code Review &#x26; Refactoring:</strong> Reviewed and restructured audio/video codec code for performance gains</li>\n<li><strong>Defect Resolution &#x26; Support:</strong> Provided engineering expertise for customer defect resolution and subsystem enhancements</li>\n<li><strong>Integration &#x26; Documentation:</strong> Managed code integration, technical documentation, and branch management</li>\n</ul>"}},{"node":{"frontmatter":{"title":"TotalChrom: Chromatography Data System & FDA Compliance Enhancements","tech":["C++","VC++","MFC","Microsoft Visual C++ IDE"],"github":"","external":""},"html":"<p>Developed and enhanced the TotalChrom chromatography data system for PerkinElmer, focusing on FDA-compliant instrument control, data acquisition, processing, and advanced graphical reporting.</p>\n<p><strong>Key Technical Achievements:</strong></p>\n<ul>\n<li><strong>Software Product Development:</strong> Enhanced and maintained TotalChrom software for chromatographic instrument control and data analysis</li>\n<li><strong>Graphics &#x26; Visualization:</strong> Improved the Unified Graphics Environment (UGE) and Plot Window for chromatogram editing, overlay, and presentation</li>\n<li><strong>Algorithm Design:</strong> Developed collision avoidance, axis division, and labeling algorithms for scientific data visualization</li>\n<li><strong>Feature Enhancements:</strong> Implemented print preview, overlay mode, color-coded peak selection, and advanced tooltip/orientation features</li>\n<li><strong>Code Quality &#x26; Documentation:</strong> Led code integration, documentation, and technical communication with client teams</li>\n</ul>"}},{"node":{"frontmatter":{"title":"OEB Book Reader for goReader Wireless eBook","tech":["Embedded VC++","WinCE","C++","OEB Format","Bookmarking","Search Algorithm"],"github":"","external":""},"html":"<p>Developed an OEB book reader application for the goReader wireless eBook device, enabling interactive reading with advanced bookmarking, annotation, highlighting, and search features on Windows CE.</p>\n<p><strong>Key Technical Achievements:</strong></p>\n<ul>\n<li><strong>Embedded Application Development:</strong> Built OEB book reader in Embedded VC++ for WinCE tablets</li>\n<li><strong>Bookmark &#x26; Indexing:</strong> Implemented bookmark management and index maintenance for OEB format books</li>\n<li><strong>Search &#x26; Annotation:</strong> Developed text search algorithms and enabled multi-color highlighting, notes, and annotation features</li>\n<li><strong>User Experience:</strong> Enhanced eBook interactivity for students with intuitive navigation and study tools</li>\n</ul>"}},{"node":{"frontmatter":{"title":"Enlight256 DSP Toolchain: Assembler, Linker & Analyzer Suite","tech":["C","C++","MFC","Microsoft Visual C++ IDE","Code Composer Studio"],"github":"","external":""},"html":"<p>Architected and developed a comprehensive toolchain for the Enlight256 DSP, including assembler, linker, analyzer, and embedded API modules to support high-performance parallel computation and embedded development.</p>\n<p><strong>Key Technical Achievements:</strong></p>\n<ul>\n<li><strong>Assembler &#x26; Disassembler Development:</strong> Designed and implemented two-pass assembler and disassembler for Enlight256 DSP supporting COFF/ELF formats</li>\n<li><strong>Syntax Parsing &#x26; Tooling:</strong> Built syntax parsing algorithms and machine operation table editor with C++/MFC</li>\n<li><strong>Embedded API Development:</strong> Developed and tested embedded APIs for Enlight256 DSP using C and Code Composer Studio</li>\n<li><strong>Automation &#x26; Testing:</strong> Automated unit testing and batch workflows for assembler/disassembler modules</li>\n<li><strong>Documentation &#x26; User Enablement:</strong> Authored design docs, test specs, and user manuals for toolchain components</li>\n</ul>"}},{"node":{"frontmatter":{"title":"Freehand DSP Tools: IDE, Assembler & Cycle-Accurate Simulator","tech":["C","C++","VC++","MFC","Microsoft Visual C++ IDE"],"github":"","external":""},"html":"<p>Developed an integrated development environment and tool suite for Freehand DSP, including assembler, cycle-accurate simulator, and advanced memory/debugging features for embedded DSP development.</p>\n<p><strong>Key Technical Achievements:</strong></p>\n<ul>\n<li><strong>IDE &#x26; Toolchain Development:</strong> Built a Windows-based IDE with language-sensitive editor, project manager, and multi-file editing</li>\n<li><strong>Assembler &#x26; Simulator:</strong> Designed and implemented assembler (pass 1 &#x26; 2), cycle-accurate simulator, and inline assembly/debugging features</li>\n<li><strong>Memory &#x26; Debugging Tools:</strong> Engineered memory map design, splitter memory window, and breakpoint transfer between editor and simulator</li>\n<li><strong>UI/UX Enhancements:</strong> Developed syntax highlighting, dialog-based configuration, and user aid/help systems</li>\n<li><strong>Documentation &#x26; Error Handling:</strong> Authored user guides, online help, and robust error reporting for assembler and memory modules</li>\n</ul>"}},{"node":{"frontmatter":{"title":"Xstream Rapid Share: Enterprise Collaboration & Messaging Platform","tech":["C++","VC++",".NET","ATL/COM","Microsoft .NET IDE","Microsoft Source Safe","SQL Server 7.0","Oracle 8i"],"github":"","external":""},"html":"<p>Developed and enhanced a web-based enterprise collaboration platform enabling secure, interactive digital workplaces for distributed teams, with advanced mail management and COM automation APIs.</p>\n<p><strong>Key Technical Achievements:</strong></p>\n<ul>\n<li><strong>Full-Stack Development:</strong> Designed and implemented mail management modules and Windows NT services for enterprise collaboration</li>\n<li><strong>API &#x26; COM Integration:</strong> Built COM automation APIs for programmatic manipulation of files, folders, notes, and mail, supporting integration with MAPI-compliant clients</li>\n<li><strong>Database &#x26; Messaging:</strong> Engineered backend integration with SQL Server/Oracle for resource management and mail archiving</li>\n<li><strong>Architecture &#x26; Documentation:</strong> Authored architecture documents and user guides for mail modules</li>\n<li><strong>Enterprise Features:</strong> Delivered secure, scalable solutions for project-wise mail accounts, attachments, and resource sharing</li>\n</ul>"}},{"node":{"frontmatter":{"title":"LGP – Answers: Knowledge Support & Guided Practice System","tech":["C","C++","Socket Programming","Microsoft ODBC","MS-Access","SQL Server 7.0","Oracle 8i"],"github":"","external":""},"html":"<p>Developed a knowledge support system enabling guided practice and real-time coaching for end-users, with modular authoring, user management, and licensing services across distributed environments.</p>\n<p><strong>Key Technical Achievements:</strong></p>\n<ul>\n<li><strong>Service-Oriented Architecture:</strong> Designed and implemented Windows NT services for client-server knowledge document management and licensing</li>\n<li><strong>API &#x26; Database Integration:</strong> Engineered socket-based communication and ODBC integration with MS-Access, SQL Server, and Oracle databases</li>\n<li><strong>User &#x26; Access Management:</strong> Built licensing services for multi-role access control (super-user, expert, user) and module assignment</li>\n<li><strong>Documentation &#x26; Support:</strong> Authored technical specifications and maintained design documentation for service modules</li>\n</ul>"}}]}}}